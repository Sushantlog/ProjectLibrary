@model CRUDAjaxDemo.ViewModels.SynopsisModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .btnDiv {
        text-align: right;
        padding: 10px;
        top: 0px !important;
        position: absolute;
        width: 100%;
    }
</style>
<div class="btnDiv">
    <a href="@Url.Action("Index", "Home", new { Id=Model.UserId})" class="btn btn-info"><span>Home</span></a>
</div>
<div class="form-box">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <h2>Synopsis</h2>
        @Html.HiddenFor(m => m.UserId)
        @Html.HiddenFor(m => m.SynopsisId)

        <div class="input-box">
            <i class='bx bxs-envelope'></i>
            @Html.DropDownList("College", (IEnumerable<SelectListItem>)ViewData["College"], "--Select--")
        </div>
        <div class="input-box">
            <i class='bx bxs-lock-alt'></i>
            @Html.DropDownList("Category", (IEnumerable<SelectListItem>)ViewData["Category"], "--Select--")
        </div>

        <div class="input-box">
            <i class='bx bxs-lock-alt'></i>
            @Html.TextBoxFor(model => model.SynopsisHeader, new { @placeholder = "Project Name" })
        </div>
        <div class="input-box">
            <i class='bx bxs-lock-alt'></i>
            @Html.TextBoxFor(model => model.SynopsisDescription, new { @placeholder = "Problem Statement" })
        </div>
        <div class="input-box">
            <i class='bx bxs-lock-alt'></i>
            @Html.TextBox("files", "", new { @type = "file", @multiple = "multiple" })

            <div class="editFiles">
                @foreach (var item in Model.Files)
                {
                    <span>@item.FileName</span> <img src="~/Images/Delete.png" class="downloadIcon" onclick="DeleteFile(@item.FileID)" /><br />
                }
            </div>
        </div>
        <div class="button">
            <input value="Save" class="Save btn" type="button" onclick="SaveSynopsisDetails(false)" />
            <input value="Edit" class="Edit btn" type="button" onclick="SaveSynopsisDetails(true)" />
        </div>
    }
</div>

<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        if (@Model.SynopsisId > 0 ) {
            $('.Edit').show();
            $('.Save').hide();
        }
        else {
            $('.Edit').hide();
            $('.Save').show();
        }
        if (@Model.CollegeId>0) {
            $('#College').val(@Model.CollegeId);
        }
        if (@Model.CategoryId>0) {
            $('#Category').val(@Model.CategoryId);
        }
        //tostr.success("me1");
    });
    function DeleteFile(FileId) {
        var data = JSON.stringify({ FileId: FileId });
        $.ajax({
            url: "/Synopsis/DeleteFile",
            type: "POST",
            data: data,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.IsValid) {
                    toastr.success(result.ResultMessage);
                    location.reload();
                }
                else {
                    toastr.error(result.ResultMessage)
                }
            },
            error: function (errormessage) {
                toastr.error("Error");
            }
        });
    }

    function SaveSynopsisDetails(IsEdit) {
        if ($("#College").val() == undefined || $("#College").val() == '') {
            toastr.error("Please select College");
            return;
        }

        if ($("#Category").val() == undefined || $("#Category").val() == '') {
            toastr.error("Please select Category");
            return;
        }

        if ($("#SynopsisHeader").val() == undefined || $("#SynopsisHeader").val() == '') {
            toastr.error("Please enter project name");
            return;
        }

        if ($("#SynopsisDescription").val() == undefined || $("#SynopsisDescription").val() == '') {
            toastr.error("Please enter problem statement");
            return;
        }
        debugger;
        if (($("#files").val() == undefined || $("#files").val() == '')&& @Model.Files.Count==0) {
            toastr.error("Please select file");
            return;
        }


        var fileSelect = $('#files').get(0);
        var files = fileSelect.files;

        var fileData = new FormData();
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }
        // Adding one more key to FormData object
        fileData.append('UserId', $("#UserId").val());
        fileData.append('CollegeID', $("#College").val());
        fileData.append('CategoryId', $("#Category").val());
        fileData.append('SynopsisId', $("#SynopsisId").val());
        fileData.append('SynopsisHeader', $("#SynopsisHeader").val());
        fileData.append('SynopsisDescription', $("#SynopsisDescription").val());
        fileData.append('IsEdit', IsEdit);

        $.ajax({
            url: "/Synopsis/SaveSynopsisDetails",
            type: "POST",
            data: fileData,
            contentType: false, // Not to set any content header
            processData: false, // Not to process data
            success: function (result) {
                if (result.IsValid) {
                    if (!IsEdit) {
                        $("#UserId").val(0);
                        $("#College").val(0);
                        $("#Category").val(0);
                        $("#SynopsisHeader").val('');
                        $("#SynopsisDescription").val('');
                        $("#files").val('');
                        toastr.success(result.ResultMessage);
                        setTimeout(
                            window.location.href = result.redirectToUrl
                            , 15000);
                    }
                    else {
                        toastr.success(result.ResultMessage);
                        location.reload();

                    }
                }
                else {
                    toastr.error(result.ResultMessage)
                }
            },
            error: function (errormessage) {
                toastr.error("Error");
            }
        });
    }

</script>