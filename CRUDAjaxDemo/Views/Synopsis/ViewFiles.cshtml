@model CRUDAjaxDemo.ViewModels.FilesListModel

@{
    ViewBag.Title = "ViewFiles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

    body {
        padding-top: 0px !important;
        padding-bottom: 20px;
    }

    .container {
        display: block !important;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        max-width: 100% !important;
        padding: 0px !important;
    }

    .downloadIcon {
        height: 20px;
    }

    .header {
        background-color: white;
        color: black;
        min-height: 70px !important;
        align-items: center;
        text-align: center;
    }

    .table {
        font-family: Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        .table td, .table th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        .table tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .table tr:hover {
            background-color: #ddd;
        }

        .table th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #04AA6D;
            color: white;
        }

    .headerText {
        padding-top: 15px;
    }
    .btnDiv {
    text-align:right;   
    padding:10px;
    }
</style>
<div class="header">
    <h2 class="headerText">Project Library</h2>
</div>
@Html.HiddenFor(model => model.LoginUserId)
<table class="table" style="background-color:white;color:black">
    <tr>
        <th>
            <span>Student</span>
        </th>
        <th>
            <span>College</span>
        </th>
        <th>
            <span>Category</span>
        </th>
        <th>
            <span>Projet Name</span>
        </th>
        <th>
            <span>Problem Statement</span>
        </th>
        <th>
            <span>Files</span>
        </th>
        <th>Action</th>
    </tr>

    @foreach (var item in Model.SynopsysList)
    {
        <tr>
            <td>
                @Html.HiddenFor(modelItem => item.SynopsisId)
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CollegeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SynopsisHeader)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SynopsisDescription)
            </td>
            <td>
                @foreach (var files in item.Files)
                {
                    @Html.DisplayFor(model => files.FileName)
                    <a href="@Url.Action("Download", "Synopsis", new { FileId = @files.FileID })">
                        <img src="~/Images/Download.png" class="downloadIcon" />
                    </a>
                    <br />
                }
            </td>
            <td>
                @if (item.UserId == Model.LoginUserId)
                {
                    <div class="button">
                        <input value="Edit" class="btn" type="button" onclick="EditSynopsisDetails('@item.SynopsisId')" />
                    </div>
                }
            </td>
        </tr>
    }

</table>
<div class="btnDiv">
    <a href="@Url.Action("Index", "Home", new { Id=Model.LoginUserId})" class="btn btn-info"><span>Home</span></a>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        //tostr.success("me1");
    });

    function EditSynopsisDetails(SynopsisId) {

        var objSynopsis = new Object();
        objSynopsis.UserId = parseInt($("#LoginUserId").val());
        objSynopsis.SynopsisId = parseInt(SynopsisId);
        var data = JSON.stringify({ objSynopsis: objSynopsis });

        $.ajax({
            url: "/Synopsis/EditSynopsisDetails",
            type: "POST",
            data: data,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.IsValid) {
                    toastr.success(result.ResultMessage);
                }
                else {
                    toastr.error(result.ResultMessage)
                }
            },
            error: function (errormessage) {
                toastr.error("Error");
            }
        });
    }
</script>