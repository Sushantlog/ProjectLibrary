@model CRUDAjaxDemo.ViewModels.SearchSynopsysModel
@{
    ViewBag.Title = "SearchProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>

    body {
        padding-top: 0px !important;
        padding-bottom: 20px;
    }

    .container {
        display: block !important;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        max-width: 100% !important;
        padding: 0px !important;
    }

    .downloadIcon {
        height: 20px;
    }

    .header {
        background-color: white;
        color: black;
        min-height: 70px !important;
        align-items: center;
        text-align: center;
    }

    .table {
        font-family: Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        .table td, .table th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        .table tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .table tr:hover {
            background-color: #ddd;
        }

        .table th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #04AA6D;
            color: white;
        }

    .headerText {
        padding-top: 15px;
    }

    .btnDiv {
        text-align: right;
        padding: 10px;
    }

    #Paging {
        color: white;
    }

    .pagination-container .pagination li {
        padding: 10px;
        border: 1px solid gray;
        font-size: 25px;
        background-color: darkgray;
    }

    .pagination-container {
        align-items: center
    }


    .Pager span {
        text-align: center;
        color: #333;
        display: inline-block;
        width: 20px;
        background-color: #B8DBFD;
        margin-right: 3px;
        line-height: 150%;
        border: 1px solid #B8DBFD;
    }

    .Pager a {
        text-align: center;
        display: inline-block;
        width: 20px;
        background-color: #0094ff;
        color: #333;
        border: 1px solid #ccc;
        margin-right: 3px;
        line-height: 150%;
        text-decoration: none;
    }

    .Pager {
        color: white;
        width: 100%;
        text-align: center;
    }

    .SearchBox {
        color: black;
        display: flex;
        background-color: aqua;
        padding: 5px;
        align-items: flex-end;
    }

        .SearchBox input, select {
            width: 50%
        }

    .btnDiv {
        width: 100%;
        text-align: right;
        padding: 10px;
        top: 0 !important;
        position: absolute;
    }
</style>
<div class="header">
    <h2 class="headerText">Search Project</h2>

    <div class="btnDiv">
        <a href="@Url.Action("Index", "Home", new { Id=Model.LoginUserId})" class="btn btn-info"><span>Home</span></a>
    </div>
    @Html.HiddenFor(m => m.LoginUserId)
</div>
<div class="SearchBox">
    <div style="width:20%">
        <span>Student Name: </span>
        @Html.TextBox("UserName", null, new { @placeholder = "UserName", onchange = "Search(1);" })
    </div>
    <div style="width: 18%">
        <span>College: </span>
        @Html.DropDownList("College", (IEnumerable<SelectListItem>)ViewData["College"], "--Select--", new { onchange = "Search(1);" })
    </div>
    <div style="width:18%">
        <span>Category: </span>
        @Html.DropDownList("Category", (IEnumerable<SelectListItem>)ViewData["Category"], "--Select--", new { onchange = "Search(1);" })
    </div>
    <div style="width:20%">
        <span>Project Name:  </span>
        @Html.TextBox("SynopsisHeader", null, new { @placeholder = "Project Name ", onchange = "Search(1);" })
    </div>
    <div style="width:24%">
        <span>Problem Statment: </span>
        @Html.TextBox("SynopsisDescription", null, new { @placeholder = "Problem Statment", onchange = "Search(1);" })
    </div>
</div>
<table id="tblRecord" class="table" style="background-color:white;color:black">
    <thead>
        <tr>
            <th><span>Sr. No.</span></th>
            <th>
                <span>Student</span>
            </th>
            <th>
                <span>College</span>
            </th>
            <th>
                <span>Category</span>
            </th>
            <th>
                <span>Projet Name</span>
            </th>
            <th>
                <span>Problem Statement</span>
            </th>
            <th>
                <span>Files</span>
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody class="tbody">
    </tbody>
</table>
<div class="Pager"></div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#College").val(@Model.DefaultCollege);
        Search(1);
    });
    $("body").on("click", ".Pager .page", function () {
        Search(parseInt($(this).attr('page')));
    });

    function Search(pageIndex) {
        var objSearch = new Object();
        objSearch.UserId = $("#LoginUserId").val();
        objSearch.UserName = $("#UserName").val();
        objSearch.CollegeID = $("#College").val();
        objSearch.CategoryId = $("#Category").val();
        objSearch.SynopsisHeader = $("#SynopsisHeader").val();
        objSearch.SynopsisDescription = $("#SynopsisDescription").val();
        objSearch.PageIndex = pageIndex;
        var data = JSON.stringify({ objSearch: objSearch });
        $.ajax({
            url: "/Synopsis/SearchFiles/" + $("#LoginUserId").val(),
            type: "POST",
            data: data,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                DisplayData(result.Data.SynopsysList);
                $(".Pager").ASPSnippets_Pager({
                    ActiveCssClass: "current",
                    PagerCssClass: "pager",
                    PageIndex: result.Data.PageIndex,
                    PageSize: result.Data.PageSize,
                    RecordCount: result.Data.RecordCount
                });
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function DisplayData(data) {
        var html = '';
        $.each(data, function (key, item) {
            var files = item.Files;
            var fileHtml = '';
            for (var i = 0; i < files.length; i++) {
                fileHtml += '<span>' + files[i].FileName + '</span>';
                fileHtml += '<a href="@Url.Action("Download", "Synopsis")?FileId=' + files[i].FileID + '"><i class="bx bx-download"></i>';
                fileHtml += '</a>';
                fileHtml += '</br>';
            }

            var editButton = ''
            if (item.UserId == $("#LoginUserId").val()) {
                editButton += '<a href="@Url.Action("EditSynopsisDetails", "Synopsis")?UserId=' + item.UserId + '&SynopsisId=' + item.SynopsisId + '"><i class="bx bx-edit"></i></a>';
                editButton += '   <i class="bx bx-trash" onclick="DeleteSynopsys('+item.SynopsisId+')"></i>';
            }

            html += '<tr>';
            html += '<td>' + item.Index + '</td>';
            html += '<td>' + item.UserName + '</td>';
            html += '<td>' + item.CollegeName + '</td>';
            html += '<td>' + item.CategoryName + '</td>';
            html += '<td>' + item.SynopsisHeader + '</td>';
            html += '<td>' + item.SynopsisDescription + '</td>';
            html += '<td>' + fileHtml + '</td>';
            html += '<td>' + editButton + '</td >';
            html += '</tr>';
        });
        $('.tbody').html(html);

    }

    function DeleteSynopsys(SynopsysId) {
        if (confirm("Are you sure you want to delete synopsis?")) {
            var data = JSON.stringify({ SynopsysId: SynopsysId });
            $.ajax({
                url: "/Synopsis/DeleteSynopsys/",
                type: "POST",
                data: data,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.IsValid) {
                        toastr.success(result.ResultMessage);
                        location.reload();
                    }
                    else {
                        toastr.error(result.ResultMessage)
                    }
                },
                error: function (errormessage) {
                    toastr.error("Error");
                }
            });
        }
    }
</script>
